apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.rengwuxian.rxjavasamples"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:support-v13:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'

    compile 'com.squareup.retrofit2:retrofit:2.0.0'         //这仨会自动导入okhttp
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'    //Converter是对于Call<T>中T的转换
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'    //CallAdapter则可以对Call转换，这样的话Call<T>中的Call也是可以被替换的，而返回值的类型就决定你后续的处理程序逻辑，同样Retrofit提供了多个CallAdapter，这里以RxJava的为例，用Observable代替Call

    compile 'com.github.bumptech.glide:glide:3.7.0'

    apt 'com.jakewharton:butterknife-compiler:8.1.0'
    compile 'com.jakewharton:butterknife:8.1.0'


    compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'    // 会自动导入rxjava和rxandroid

    //compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'(导入这个就会自动导入对应的rxjava和rxandroid版本，而且还需要导入对应支持的view包)
    //compile 'io.reactivex.rxjava2:rxjava:2.0.9'
    //compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
}
